{"version":3,"file":"ModalContext.js","sourceRoot":"","sources":["../../src/modal/ModalContext.tsx"],"names":[],"mappings":";;;AACA,iCAAkG;AAElG,oDAAiD;AAejD,MAAM,YAAY,GAAG,IAAA,qBAAa,EAA+B,SAAS,CAAC,CAAC;AAErE,MAAM,oBAAoB,GAAG,CAAC,EAAE,QAAQ,EAAqB,EAAE,EAAE;IACtE,MAAM,UAAU,GAAG,IAAA,6BAAa,GAAoD,CAAC;IACrF,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAA0B,SAAS,CAAC,CAAC;IACnF,MAAM,MAAM,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,CAAC;IAC7B,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,IAAA,gBAAQ,EAAkB,IAAI,GAAG,EAAE,CAAC,CAAC;IAEjF,MAAM,SAAS,GAAG,IAAA,mBAAW,EAC3B,SAAS,SAAS,CAChB,MAAmB;QAEnB,cAAc,CAAC,MAAM,CAAC,CAAC;QACvB,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACzC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC,EACD,CAAC,UAAU,CAAC,CACb,CAAC;IAEF,MAAM,UAAU,GAAG,IAAA,mBAAW,EAC5B,CAAC,QAAkB,EAAE,EAAE;QACrB,IAAI,WAAW,EAAE,CAAC;YAChB,cAAc,CAAC,SAAS,CAAC,CAAC;YAE1B,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACnB,cAAc,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACd,UAAU,CAAC,MAAM,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC,EACD,CAAC,WAAW,EAAE,UAAU,EAAE,cAAc,CAAC,CAC1C,CAAC;IAEF,MAAM,gBAAgB,GAAG,IAAA,mBAAW,EAAC,CAAC,IAAa,EAAE,QAAoB,EAAE,EAAE;QAC3E,IAAI,IAAI,KAAK,OAAO;YAAE,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;QAEtC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,CAAC,IAAI,CAAC,kEAAkE,CAAC,CAAC;YACjF,OAAO,GAAG,EAAE,GAAE,CAAC,CAAC;QAClB,CAAC;QAED,iBAAiB,CAAC,CAAC,IAAI,EAAE,EAAE;YACzB,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;YAC7B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACrB,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,EAAE;YACV,iBAAiB,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzB,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC7B,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACxB,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,CAAC,YAAY,CAAC,QAAQ,CACpB,KAAK,CAAC,CAAC;YACL,WAAW;YACX,SAAS;YACT,UAAU;YACV,gBAAgB;SACjB,CAAC,CACF;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,YAAY,CAAC,QAAQ,CAAC,CACzB,CAAC;AACJ,CAAC,CAAC;AApEW,QAAA,oBAAoB,wBAoE/B;AAEK,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,MAAM,OAAO,GAAG,IAAA,WAAG,EAAC,YAAY,CAAC,CAAC;IAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;IAChF,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AANW,QAAA,eAAe,mBAM1B","sourcesContent":["import { NavigationProp, type ParamListBase } from '@react-navigation/native';\nimport { createContext, use, useCallback, useRef, useState, type PropsWithChildren } from 'react';\n\nimport { useNavigation } from '../useNavigation';\n\ninterface ModalConfig {\n  component: React.ReactNode;\n  navigationProp: NavigationProp<ParamListBase>;\n  uniqueId: string;\n}\n\nexport interface ModalContextType {\n  modalConfig: ModalConfig | undefined;\n  openModal: (config: ModalConfig) => void;\n  closeModal: (isNative?: boolean) => void;\n  addEventListener: (type: 'close', callback: () => void) => () => void;\n}\n\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\n\nexport const ModalContextProvider = ({ children }: PropsWithChildren) => {\n  const navigation = useNavigation<NavigationProp<{ __internal__modal: undefined }>>();\n  const [modalConfig, setModalConfig] = useState<ModalConfig | undefined>(undefined);\n  const isOpen = useRef(false);\n  const [eventListeners, setEventListeners] = useState<Set<() => void>>(new Set());\n\n  const openModal = useCallback(\n    function openModal<T extends NavigationProp<ParamListBase> = NavigationProp<ParamListBase>>(\n      config: ModalConfig\n    ) {\n      setModalConfig(config);\n      navigation.navigate('__internal__modal');\n      isOpen.current = true;\n    },\n    [navigation]\n  );\n\n  const closeModal = useCallback(\n    (isNative?: boolean) => {\n      if (modalConfig) {\n        setModalConfig(undefined);\n\n        if (isOpen.current) {\n          eventListeners.forEach((listener) => listener());\n          if (!isNative) {\n            navigation.goBack();\n          }\n        }\n      }\n      isOpen.current = false;\n    },\n    [modalConfig, navigation, eventListeners]\n  );\n\n  const addEventListener = useCallback((type: 'close', callback: () => void) => {\n    if (type !== 'close') return () => {};\n\n    if (!callback) {\n      console.warn('Passing undefined as a callback to addEventListener is forbidden');\n      return () => {};\n    }\n\n    setEventListeners((prev) => {\n      const newSet = new Set(prev);\n      newSet.add(callback);\n      return newSet;\n    });\n\n    return () => {\n      setEventListeners((prev) => {\n        const newSet = new Set(prev);\n        newSet.delete(callback);\n        return newSet;\n      });\n    };\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalConfig,\n        openModal,\n        closeModal,\n        addEventListener,\n      }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModalContext = () => {\n  const context = use(ModalContext);\n  if (!context) {\n    throw new Error('useModalContext must be used within a ModalContextProvider');\n  }\n  return context;\n};\n"]}